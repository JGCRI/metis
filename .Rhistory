if("devtools" %in% rownames(installed.packages()) == F){install.packages("devtools")}
library(devtools)
if("metis" %in% rownames(installed.packages()) == F){install_github(repo="zarrarkhan/metis")}
library(metis)
if("rgcam" %in% rownames(installed.packages()) == F){install_github(repo="JGCRI/rgcam")}
library(rgcam)
if("tibble" %in% rownames(installed.packages()) == F){install.packages("tibble")}
library(tibble)
if("dplyr" %in% rownames(installed.packages()) == F){install.packages("dlpyr")}
library(dplyr)
if("rgdal" %in% rownames(installed.packages()) == F){install.packages("rgdal")}
library(rgdal)
if("tmap" %in% rownames(installed.packages()) == F){install.packages("tmap")}
library(tmap)
exampleGridTable<-paste(getwd(),"/dataFiles/examples/example_grid_ArgentinaBermejo3_Eg1Eg2.csv",sep="")
examplePolygonTable<-paste(getwd(),"/dataFiles/examples/example_poly_ArgentinaBermejo3_Eg1Eg2.csv",sep="")
examplePolygonTable
polyTable=read.csv(examplePolygonTable);head(polyTable)
NULL
polygonDataTables=read.csv(examplePolygonTable);head(polygonDataTables)
polygonDataTables=read.csv(examplePolygonTable);head(polygonDataTables)
if(is.null(polygonDataTables)){
stop ("polygonDataTables is NUll.")
}
examplePolygonTable
polyTable
unique(polyTable$param)
?tribble
ioTblEg=tribble(
~sector , ~wat, ~ag, ~energy, ~domestic, ~export,
"wat"   ,    5,  30,      20,        10,      2,
"ag"    ,    0,  30,      20,        10,      2,
"energy",    5,   5,       5,        30,      5
)
ioTblEg
ioTblEg<-ioTblEg%>%mutate(total=rowSums());head(ioTblEg)
ioTblEg<-ioTblEg%>%mutate(total=rowSums(.));head(ioTblEg)
ioTblEg<-ioTblEg%>%mutate(total=rowSums(names(.)));head(ioTblEg)
ioTblEg<-ioTblEg%>%mutate(total=rowSums(names(ioTblEg)));head(ioTblEg)
ioTblEg=tribble(
~sector , ~wat, ~ag, ~energy, ~domestic, ~export,
"wat"   ,    5,  30,      20,        10,      2,
"ag"    ,    0,  30,      20,        10,      2,
"energy",    5,   5,       5,        30,      5
)
names(ioTblEg)
ioTblEg<-ioTblEg%>%mutate(total=rowSums(select(., -("sector"))));head(ioTblEg)
rownames(ioTblEg)=ioTblEg$sector;head(ioTblEg)
# Calculate technological co-efficient matrix A
A<-ioTblEg%>%dplyr::select(-sector,domestic,export);A
# Calculate technological co-efficient matrix A
A<-ioTblEg%>%dplyr::select(-sector,-domestic,-export);A
# Calculate technological co-efficient matrix A
A<-sweep(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),margin=2,
ioTblEg$total,"/")
ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)
ioTblEg$total
as.vector(ioTblEg$total)
?diag
diag(2)
# Calculate technological co-efficient matrix A
ioTblEg$total^-1*diag(3)
A<-sweep(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),margin=2,
as.vector(ioTblEg$total),"/")
ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)
A<-sweep(as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)),margin=2,
as.vector(ioTblEg$total),"/")
# Intermediate flow matrix.
flowtable <- rbind( c( 150 , 500 ), c( 200 , 100 ) )
# Final demand.
finaldemand <- rbind( c( 350 ), c( 1700 ) )
# Bind into input-output table.
inputoutputtable <- cbind( flowtable , finaldemand )
# Convert object to data.frame.
inputoutputtable <- as.data.frame( inputoutputtable )
# Name columns of table (dataframe)
names( inputoutputtable ) <- c("x1" , "x2" , "finaldemand")
# Calculate total output, add final demand and intermediate columns:
inputoutputtable$totaloutput <- inputoutputtable$x1 +
inputoutputtable$x2 +
inputoutputtable$finaldemand
# Show the small IO table.
inputoutputtable
# Save total output vector as a separate object. Use later.
totaloutput <- inputoutputtable$totaloutput
## Calcate coefficient matrix:
z <- ( totaloutput )^-1 * diag( 2 )
A <- flowtable %*% z
# Using "Sweep"
A.alternative <- sweep( flowtable ,
margin = 2 ,
totaloutput ,
'/' )
flowtable
totaloutput
sweep( flowtable ,
margin = 2 ,
totaloutput ,
'/' )
?sweep
# Using "Sweep"
A.alternative <- sweep( x=flowtable ,
MARGIN = 2 ,
STATS=totaloutput ,
FUN='/',
check.margin=T)
A.alternative
A<-sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
A
ioTblEg$total
ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)
class(A)
A
ioTblEg$total^-1*diag(3)
ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total) %*% ioTblEg$total^-1*diag(3)
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.vector(ioTblEg$total^-1*diag(3))
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total))
ioTblEg=tribble(
~sector , ~wat, ~ag, ~energy, ~domestic, ~export,
"wat"   ,    5,  30,      20,        10,      2,
"ag"    ,    0,  30,      20,        10,      2,
"energy",    5,   5,       5,        30,      5
)
ioTblEg<-ioTblEg%>%mutate(total=rowSums(select(., -("sector"))));head(ioTblEg)
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.vector(ioTblEg$total^-1*diag(3))
ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total))
as.matrix(ioTblEg$total^-1*diag(3))
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
ioTblEg
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
# Calculate technological co-efficient matrix A
system.time({
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
})
system.time({
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
})
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
end_time - start_time
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total) %*% ioTblEg$total^-1*diag(3)
A<-as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
A
# Calculate technological co-efficient matrix A
A<-as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(nrow(ioTblEg)))
A
L<-solve(diag(nrow(ioTblEg))-A);L
isSymmetric(A)
A
L<-solve(diag(nrow(ioTblEg))-A);L
# Given D what is X
D <- ioTblEg$total; D
X <- L%*%D
X <- L%*%D; X
40000-1600
100000-72000-4000
ioTblEg=tribble(
~sector ,    ~wat,         ~ag, ~energy, ~domestic, ~export,
"wat"   ,    1600,    72000,      0,        38400,      0,
"ag"    ,       0,     4000,      0,        24000,      0,
"energy",       0,        0,      0,        0,      0
)
ioTblEg<-ioTblEg%>%mutate(total=rowSums(select(., -("sector"))));head(ioTblEg)
40000-72000-4000
100000-1600
ioTblEg=tribble(
~sector ,    ~wat,         ~ag, ~energy, ~domestic, ~export,
"wat"   ,    1600,    72000,      0,        -36000,      0,
"ag"    ,       0,     4000,      0,        98400,      0,
"energy",       0,        0,      0,        0,      0
)
ioTblEg<-ioTblEg%>%mutate(total=rowSums(select(., -("sector"))));head(ioTblEg)
40000-72000-1600
100000-4000
ioTblEg=tribble(
~sector ,    ~wat,         ~ag, ~energy, ~domestic, ~export,
"wat"   ,    1600,    72000,      0,        -33600,      0,
"ag"    ,       0,     4000,      0,        96000,      0,
"energy",       0,        0,      0,        0,      0
)
ioTblEg<-ioTblEg%>%mutate(total=rowSums(select(., -("sector"))));head(ioTblEg)
# Calculate technological co-efficient matrix A
A<-as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(nrow(ioTblEg)));
A
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total))
as.matrix(ioTblEg$total^-1*diag(nrow(ioTblEg)))
# Calculate technological co-efficient matrix A
A<-as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(nrow(ioTblEg)));
ioTblEg=tribble(
~sector ,    ~wat,         ~ag,  ~domestic, ~export,
"wat"   ,    1600,    72000,      -33600,      0,
"ag"    ,       0,     4000,       96000,      0
)
ioTblEg<-ioTblEg%>%mutate(total=rowSums(select(., -("sector"))));head(ioTblEg)
# Testing Inverse Calculation for Coefficient Matrix
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(3))
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total))
as.matrix(ioTblEg$total^-1*diag(nrow(ioTblEg))
)
# Calculate technological co-efficient matrix A
A<-as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(nrow(ioTblEg)));
A
# Testing Inverse Calculation for Coefficient Matrix
start_time <- Sys.time()
as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(nrow(ioTblEg)));
end_time <- Sys.time()
t1=end_time - start_time
start_time <- Sys.time()
sweep(x=ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total),
MARGIN=2,
STATS=ioTblEg$total,
FUN="/",
check.margin=T)
end_time <- Sys.time()
t2=end_time - start_time
t1;t2
# Calculate technological co-efficient matrix A
A<-as.matrix(ioTblEg%>%dplyr::select(-sector,-domestic,-export,-total)) %*% as.matrix(ioTblEg$total^-1*diag(nrow(ioTblEg)));
A
L<-solve(diag(nrow(ioTblEg))-A);L
# Given D what is X
D <- ioTblEg$total; D
X <- L%*%D; X
D<-c(30000,300000)
X <- L%*%D; X
# Given D what is X
D <- ioTblEg$total; D
X <- L%*%D; X
ioTblEg<-ioTblEg%>%mutate(total=rowSums(select(., -("sector"))));head(ioTblEg)
# Given D what is X
D <- ioTblEg$total; D
X <- L%*%D; X
# Given D what is X
D <- ioTblEg$domestic; D
#D<-c(30000,300000)
X <- L%*%D; X
OwnFlow<-X-D;OwnFlow
D<-c(33600,0)
X <- L%*%D; X
L
D<-c(33600,0)
X <- L%*%D; X
X <- as_tibble(L%*%D)
X <- as_tibble(L%*%D);X
X <- as_tibble(L%*%D)%>%bind_cols(ioTblEg$sector);X
ioTblEg$sector
X <- as_tibble(L%*%D)%>%bind_cols(as_tibble(ioTblEg$sector));X
X <- as_tibble(L%*%D)%>%bind_cols(ioTblEg%>%dplyr::select(sector));X
X <- as_tibble(L%*%D)%>%bind_cols(ioTblEg%>%dplyr::select(sector))%>%dplyr::rename(production=V1);X
# Given D what is X
D <- ioTblEg$domestic; D
D<-c(33600,0)
D<-c(33600,0);D
as_tibble(L%*%D)
X <- as_tibble(L%*%D)%>%
bind_cols(ioTblEg%>%dplyr::select(sector),as_tibble(D))%>%
dplyr::rename(production=V1);X
X <- as_tibble(L%*%D)%>%
bind_cols(sector=ioTblEg%>%dplyr::select(sector),externale=as_tibble(D));X
X <- as_tibble(L%*%D)%>%
bind_cols(ioTblEg%>%dplyr::select(sector),as_tibble(D))%>%
dplyr::rename(production=V1,external=value);X
OwnFlow<-X-D;OwnFlow
OwnFlow<-L%*%D-D;OwnFlow
A
0.04*35000
OwnFlow<-A%*%L%*%D;OwnFlow
A
OwnFlow<-X-D;OwnFlow
OwnFlow<-L%*%D-D;OwnFlow
library(metis)
devtools::check()
?one_of
library(metis)
devtools::check()
library(metis)
devtools::check()
devtools::check()
?head
devtools::check()
devtools::check()
