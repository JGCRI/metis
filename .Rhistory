run_io_i = F}
metis.runAll(run_readGCAM = run_readGCAM_i,
gcamcountryNames = gcamcountryNames_i, # Must be GCAM regions
reReadDataGCAM = reReadDataGCAM_i,
gcamdatabasePath = gcamdatabasePath_i,
gcamdatabaseName = gcamdatabaseName_i,
dataProjPath = dataProjPath_i,
dataProj = dataProj_i,
scenOrigNames = scenOrigNames_i,
scenNewNames = scenNewNames_i,
# CHARTS
dataTablesLocal = dataTablesLocal_i,
run_charts = run_charts_i,
scenRef = scenRef_i, # Default is NULL
regionCompareOnly = regionCompareOnly_i, # Default is "0"
scenarioCompareOnly = scenarioCompareOnly_i, # Default is "0"
colOrder1 = c("GCAMOrig","GCAMRef","Local Data"),
colOrderName1 = "scenario",
xCompare = c("2015","2030","2050","2100"),
xRange = c(2010,2015,2020,2025,2030,2035,2040,2045,2050),
# BOUNDARIES
run_boundaries = run_boundaries_i,
localcountryName = localcountryName_i, # Country or Region Name
localShapeFileFolder = localShapeFileFolder_i ,
localShapeFile = localShapeFile_i,
localShapeFileColName = localShapeFileColName_i, # Make sure this is one of the names(tempShape@data)
# BIA
run_bia = run_bia_i,
subsectorNAdistribute = "totalOther", # Choose between "totalOther" or "even"
# PREP GRIDS
run_prepGrids = run_prepGrids_i,
reReadDataPrepGrids=reReadDataPrepGrids_i,
sqliteUSE = T,
sqliteDBNamePath =paste(getwd(),"/outputs/Grids/gridMetis.sqlite", sep = ""),
gridMetisData=paste(getwd(),"/outputs/Grids/gridMetis.RData", sep = ""),
# Grid2Poly
run_grid2poly = run_grid2poly_i,
# If sqliteUSE is T above it will use the SQL produced in
grid=NULL, # If additional grids are to be run
# MAPS
run_maps = run_maps_i,
xRangeMap= seq(from=2000,to=2050,by=5),
legendPosition=c("LEFT","bottom"),
indvScenarios = "All",
GCMRCPSSPPol=F,
scenRefMap="gfdl-esm2m_rcp2p6_NA_NA", # Must be one of the GCM RCP scenario combinations
run_map_grid = T,
run_map_state = T,
run_map_GCAMbasin = T,
run_map_localShape = T,
# IO RUN
run_io = run_io_i)
#-----------------------------
# Modules to Run
#-----------------------------
if(TRUE){
run_readGCAM_i   = F; reReadDataGCAM_i    = 0; # If a dataProj file has already been created then leave this as 0.
run_charts_i     = F; regionCompareOnly_i = 0; scenarioCompareOnly_i = 0;
run_boundaries_i = F; run_bia_i = F;
run_prepGrids_i  = F; reReadDataPrepGrids_i = 0;
run_grid2poly_i  = F; run_state_grid2poly = T; run_GCAMbasin_grid2poly = T; run_localShape_grid2poly = T;
run_maps_i       = T; run_map_state = T;       run_map_GCAMbasin = T;       run_map_localShape = F; run_map_grid = T;
run_io_i         = F}
metis.runAll(run_readGCAM = run_readGCAM_i,
gcamcountryNames = gcamcountryNames_i, # Must be GCAM regions
reReadDataGCAM = reReadDataGCAM_i,
gcamdatabasePath = gcamdatabasePath_i,
gcamdatabaseName = gcamdatabaseName_i,
dataProjPath = dataProjPath_i,
dataProj = dataProj_i,
scenOrigNames = scenOrigNames_i,
scenNewNames = scenNewNames_i,
# CHARTS
dataTablesLocal = dataTablesLocal_i,
run_charts = run_charts_i,
scenRef = scenRef_i, # Default is NULL
regionCompareOnly = regionCompareOnly_i, # Default is "0"
scenarioCompareOnly = scenarioCompareOnly_i, # Default is "0"
colOrder1 = c("GCAMOrig","GCAMRef","Local Data"),
colOrderName1 = "scenario",
xCompare = c("2015","2030","2050","2100"),
xRange = c(2010,2015,2020,2025,2030,2035,2040,2045,2050),
# BOUNDARIES
run_boundaries = run_boundaries_i,
localcountryName = localcountryName_i, # Country or Region Name
localShapeFileFolder = localShapeFileFolder_i ,
localShapeFile = localShapeFile_i,
localShapeFileColName = localShapeFileColName_i, # Make sure this is one of the names(tempShape@data)
# BIA
run_bia = run_bia_i,
subsectorNAdistribute = "totalOther", # Choose between "totalOther" or "even"
# PREP GRIDS
run_prepGrids = run_prepGrids_i,
reReadDataPrepGrids=reReadDataPrepGrids_i,
sqliteUSE = T,
sqliteDBNamePath =paste(getwd(),"/outputs/Grids/gridMetis.sqlite", sep = ""),
gridMetisData=paste(getwd(),"/outputs/Grids/gridMetis.RData", sep = ""),
# Grid2Poly
run_grid2poly = run_grid2poly_i,
# If sqliteUSE is T above it will use the SQL produced in
grid=NULL, # If additional grids are to be run
# MAPS
run_maps = run_maps_i,
xRangeMap= seq(from=2000,to=2050,by=5),
legendPosition=c("LEFT","bottom"),
indvScenarios = "All",
GCMRCPSSPPol=F,
scenRefMap="gfdl-esm2m_rcp2p6_NA_NA", # Must be one of the GCM RCP scenario combinations
run_map_grid = T,
run_map_state = T,
run_map_GCAMbasin = T,
run_map_localShape = T,
# IO RUN
run_io = run_io_i)
#-----------------------------
# Modules to Run
#-----------------------------
if(TRUE){
run_readGCAM_i   = F; reReadDataGCAM_i    = 0; # If a dataProj file has already been created then leave this as 0.
run_charts_i     = F; regionCompareOnly_i = 0; scenarioCompareOnly_i = 0;
run_boundaries_i = F; run_bia_i = F;
run_prepGrids_i  = F; reReadDataPrepGrids_i = 0;
run_grid2poly_i  = F; run_state_grid2poly = T; run_GCAMbasin_grid2poly = T; run_localShape_grid2poly = T;
run_maps_i       = T; run_map_state = T;       run_map_GCAMbasin = T;       run_map_localShape = F; run_map_grid = F;
run_io_i         = F}
#-----------------------------
# Modules to Run
#-----------------------------
if(TRUE){
run_readGCAM_i   = F; reReadDataGCAM_i    = 0; # If a dataProj file has already been created then leave this as 0.
run_charts_i     = F; regionCompareOnly_i = 0; scenarioCompareOnly_i = 0;
run_boundaries_i = F; run_bia_i = F;
run_prepGrids_i  = F; reReadDataPrepGrids_i = 0;
run_grid2poly_i  = F; run_state_grid2poly = T; run_GCAMbasin_grid2poly = T; run_localShape_grid2poly = T;
run_maps_i       = T; run_map_state = T;       run_map_GCAMbasin = T;       run_map_localShape = F; run_map_grid = F;
run_io_i         = F}
metis.runAll(run_readGCAM = run_readGCAM_i,
gcamcountryNames = gcamcountryNames_i, # Must be GCAM regions
reReadDataGCAM = reReadDataGCAM_i,
gcamdatabasePath = gcamdatabasePath_i,
gcamdatabaseName = gcamdatabaseName_i,
dataProjPath = dataProjPath_i,
dataProj = dataProj_i,
scenOrigNames = scenOrigNames_i,
scenNewNames = scenNewNames_i,
# CHARTS
dataTablesLocal = dataTablesLocal_i,
run_charts = run_charts_i,
scenRef = scenRef_i, # Default is NULL
regionCompareOnly = regionCompareOnly_i, # Default is "0"
scenarioCompareOnly = scenarioCompareOnly_i, # Default is "0"
colOrder1 = c("GCAMOrig","GCAMRef","Local Data"),
colOrderName1 = "scenario",
xCompare = c("2015","2030","2050","2100"),
xRange = c(2010,2015,2020,2025,2030,2035,2040,2045,2050),
# BOUNDARIES
run_boundaries = run_boundaries_i,
localcountryName = localcountryName_i, # Country or Region Name
localShapeFileFolder = localShapeFileFolder_i ,
localShapeFile = localShapeFile_i,
localShapeFileColName = localShapeFileColName_i, # Make sure this is one of the names(tempShape@data)
# BIA
run_bia = run_bia_i,
subsectorNAdistribute = "totalOther", # Choose between "totalOther" or "even"
# PREP GRIDS
run_prepGrids = run_prepGrids_i,
reReadDataPrepGrids=reReadDataPrepGrids_i,
sqliteUSE = T,
sqliteDBNamePath =paste(getwd(),"/outputs/Grids/gridMetis.sqlite", sep = ""),
gridMetisData=paste(getwd(),"/outputs/Grids/gridMetis.RData", sep = ""),
# Grid2Poly
run_grid2poly = run_grid2poly_i,
# If sqliteUSE is T above it will use the SQL produced in
grid=NULL, # If additional grids are to be run
# MAPS
run_maps = run_maps_i,
xRangeMap= seq(from=2000,to=2050,by=5),
legendPosition=c("LEFT","bottom"),
indvScenarios = "All",
GCMRCPSSPPol=F,
scenRefMap="gfdl-esm2m_rcp2p6_NA_NA", # Must be one of the GCM RCP scenario combinations
run_map_grid = T,
run_map_state = T,
run_map_GCAMbasin = T,
run_map_localShape = T,
# IO RUN
run_io = run_io_i)
#-----------------------------
# Modules to Run
#-----------------------------
if(TRUE){
run_readGCAM_i   = F; reReadDataGCAM_i    = 0; # If a dataProj file has already been created then leave this as 0.
run_charts_i     = F; regionCompareOnly_i = 0; scenarioCompareOnly_i = 0;
run_boundaries_i = F; run_bia_i = F;
run_prepGrids_i  = F; reReadDataPrepGrids_i = 0;
run_grid2poly_i  = F; run_state_grid2poly_i = T; run_GCAMbasin_grid2poly_i = T; run_localShape_grid2poly_i = T;
run_maps_i       = T; run_map_state_i = T;       run_map_GCAMbasin_i = T;       run_map_localShape_i = F; run_map_grid_i = F;
run_io_i         = F}
#-----------------------------
# Modules to Run
#-----------------------------
if(TRUE){
run_readGCAM_i   = F; reReadDataGCAM_i    = 0; # If a dataProj file has already been created then leave this as 0.
run_charts_i     = F; regionCompareOnly_i = 0; scenarioCompareOnly_i = 0;
run_boundaries_i = F; run_bia_i = F;
run_prepGrids_i  = F; reReadDataPrepGrids_i = 0;
run_grid2poly_i  = F; run_state_grid2poly_i = F; run_GCAMbasin_grid2poly_i = F; run_localShape_grid2poly_i = F;
run_maps_i       = T; run_map_state_i = T;       run_map_GCAMbasin_i = T;       run_map_localShape_i = F; run_map_grid_i = F;
run_io_i         = F}
metis.runAll(run_readGCAM = run_readGCAM_i,
gcamcountryNames = gcamcountryNames_i, # Must be GCAM regions
reReadDataGCAM = reReadDataGCAM_i,
gcamdatabasePath = gcamdatabasePath_i,
gcamdatabaseName = gcamdatabaseName_i,
dataProjPath = dataProjPath_i,
dataProj = dataProj_i,
scenOrigNames = scenOrigNames_i,
scenNewNames = scenNewNames_i,
# CHARTS
dataTablesLocal = dataTablesLocal_i,
run_charts = run_charts_i,
scenRef = scenRef_i, # Default is NULL
regionCompareOnly = regionCompareOnly_i, # Default is "0"
scenarioCompareOnly = scenarioCompareOnly_i, # Default is "0"
colOrder1 = c("GCAMOrig","GCAMRef","Local Data"),
colOrderName1 = "scenario",
xCompare = c("2015","2030","2050","2100"),
xRange = c(2010,2015,2020,2025,2030,2035,2040,2045,2050),
# BOUNDARIES
run_boundaries = run_boundaries_i,
localcountryName = localcountryName_i, # Country or Region Name
localShapeFileFolder = localShapeFileFolder_i ,
localShapeFile = localShapeFile_i,
localShapeFileColName = localShapeFileColName_i, # Make sure this is one of the names(tempShape@data)
# BIA
run_bia = run_bia_i,
subsectorNAdistribute = "totalOther", # Choose between "totalOther" or "even"
# PREP GRIDS
run_prepGrids = run_prepGrids_i,
reReadDataPrepGrids=reReadDataPrepGrids_i,
sqliteUSE = T,
sqliteDBNamePath =paste(getwd(),"/outputs/Grids/gridMetis.sqlite", sep = ""),
gridMetisData=paste(getwd(),"/outputs/Grids/gridMetis.RData", sep = ""),
# Grid2Poly
run_grid2poly = run_grid2poly_i,
run_state_grid2poly = run_state_grid2poly_i,
run_GCAMbasin_grid2poly = run_GCAMbasin_grid2poly_i,
run_localShape_grid2poly = run_localShape_grid2poly_i,
# If sqliteUSE is T above it will use the SQL produced in
grid=NULL, # If additional grids are to be run
# MAPS
run_maps = run_maps_i,
xRangeMap= seq(from=2000,to=2050,by=5),
legendPosition=c("LEFT","bottom"),
indvScenarios = "All",
GCMRCPSSPPol=F,
scenRefMap="gfdl-esm2m_rcp2p6_NA_NA", # Must be one of the GCM RCP scenario combinations
run_map_grid = run_map_grid_i,
run_map_state = run_map_state_i,
run_map_GCAMbasin = run_map_GCAMbasin_i,
run_map_localShape = run_map_localShape_i,
# IO RUN
run_io = run_io_i)
#-----------------------------
# Modules to Run
#-----------------------------
if(TRUE){
run_readGCAM_i   = F; reReadDataGCAM_i    = 0; # If a dataProj file has already been created then leave this as 0.
run_charts_i     = F; regionCompareOnly_i = 0; scenarioCompareOnly_i = 0;
run_boundaries_i = F; run_bia_i = F;
run_prepGrids_i  = F; reReadDataPrepGrids_i = 0;
run_grid2poly_i  = F; run_state_grid2poly_i = F; run_GCAMbasin_grid2poly_i = F; run_localShape_grid2poly_i = F;
run_maps_i       = T; run_map_state_i = F;       run_map_GCAMbasin_i = F;       run_map_localShape_i = T; run_map_grid_i = F;
run_io_i         = F}
metis.runAll(run_readGCAM = run_readGCAM_i,
gcamcountryNames = gcamcountryNames_i, # Must be GCAM regions
reReadDataGCAM = reReadDataGCAM_i,
gcamdatabasePath = gcamdatabasePath_i,
gcamdatabaseName = gcamdatabaseName_i,
dataProjPath = dataProjPath_i,
dataProj = dataProj_i,
scenOrigNames = scenOrigNames_i,
scenNewNames = scenNewNames_i,
# CHARTS
dataTablesLocal = dataTablesLocal_i,
run_charts = run_charts_i,
scenRef = scenRef_i, # Default is NULL
regionCompareOnly = regionCompareOnly_i, # Default is "0"
scenarioCompareOnly = scenarioCompareOnly_i, # Default is "0"
colOrder1 = c("GCAMOrig","GCAMRef","Local Data"),
colOrderName1 = "scenario",
xCompare = c("2015","2030","2050","2100"),
xRange = c(2010,2015,2020,2025,2030,2035,2040,2045,2050),
# BOUNDARIES
run_boundaries = run_boundaries_i,
localcountryName = localcountryName_i, # Country or Region Name
localShapeFileFolder = localShapeFileFolder_i ,
localShapeFile = localShapeFile_i,
localShapeFileColName = localShapeFileColName_i, # Make sure this is one of the names(tempShape@data)
# BIA
run_bia = run_bia_i,
subsectorNAdistribute = "totalOther", # Choose between "totalOther" or "even"
# PREP GRIDS
run_prepGrids = run_prepGrids_i,
reReadDataPrepGrids=reReadDataPrepGrids_i,
sqliteUSE = T,
sqliteDBNamePath =paste(getwd(),"/outputs/Grids/gridMetis.sqlite", sep = ""),
gridMetisData=paste(getwd(),"/outputs/Grids/gridMetis.RData", sep = ""),
# Grid2Poly
run_grid2poly = run_grid2poly_i,
run_state_grid2poly = run_state_grid2poly_i,
run_GCAMbasin_grid2poly = run_GCAMbasin_grid2poly_i,
run_localShape_grid2poly = run_localShape_grid2poly_i,
# If sqliteUSE is T above it will use the SQL produced in
grid=NULL, # If additional grids are to be run
# MAPS
run_maps = run_maps_i,
xRangeMap= seq(from=2000,to=2050,by=5),
legendPosition=c("LEFT","bottom"),
indvScenarios = "All",
GCMRCPSSPPol=F,
scenRefMap="gfdl-esm2m_rcp2p6_NA_NA", # Must be one of the GCM RCP scenario combinations
run_map_grid = run_map_grid_i,
run_map_state = run_map_state_i,
run_map_GCAMbasin = run_map_GCAMbasin_i,
run_map_localShape = run_map_localShape_i,
# IO RUN
run_io = run_io_i)
#-----------------------------
# Modules to Run
#-----------------------------
if(TRUE){
run_readGCAM_i   = F; reReadDataGCAM_i    = 0; # If a dataProj file has already been created then leave this as 0.
run_charts_i     = F; regionCompareOnly_i = 0; scenarioCompareOnly_i = 0;
run_boundaries_i = F; run_bia_i = F;
run_prepGrids_i  = F; reReadDataPrepGrids_i = 0;
run_grid2poly_i  = F; run_state_grid2poly_i = F; run_GCAMbasin_grid2poly_i = F; run_localShape_grid2poly_i = F;
run_maps_i       = F; run_map_state_i = F;       run_map_GCAMbasin_i = F;  run_map_grid_i = F;
run_map_localShapeLocalData_i = F; run_map_localShapeGCAMData_i = F; run_map_localShapeGCAMGrid_i = F;
run_io_i         = F}
metis.runAll(run_readGCAM = run_readGCAM_i,
gcamcountryNames = gcamcountryNames_i, # Must be GCAM regions
reReadDataGCAM = reReadDataGCAM_i,
gcamdatabasePath = gcamdatabasePath_i,
gcamdatabaseName = gcamdatabaseName_i,
dataProjPath = dataProjPath_i,
dataProj = dataProj_i,
scenOrigNames = scenOrigNames_i,
scenNewNames = scenNewNames_i,
# CHARTS
dataTablesLocal = dataTablesLocal_i,
run_charts = run_charts_i,
scenRef = scenRef_i, # Default is NULL
regionCompareOnly = regionCompareOnly_i, # Default is "0"
scenarioCompareOnly = scenarioCompareOnly_i, # Default is "0"
colOrder1 = c("GCAMOrig","GCAMRef","Local Data"),
colOrderName1 = "scenario",
xCompare = c("2015","2030","2050","2100"),
xRange = c(2010,2015,2020,2025,2030,2035,2040,2045,2050),
# BOUNDARIES
run_boundaries = run_boundaries_i,
localcountryName = localcountryName_i, # Country or Region Name
localShapeFileFolder = localShapeFileFolder_i ,
localShapeFile = localShapeFile_i,
localShapeFileColName = localShapeFileColName_i, # Make sure this is one of the names(tempShape@data)
# BIA
run_bia = run_bia_i,
subsectorNAdistribute = "totalOther", # Choose between "totalOther" or "even"
# PREP GRIDS
run_prepGrids = run_prepGrids_i,
reReadDataPrepGrids=reReadDataPrepGrids_i,
sqliteUSE = T,
sqliteDBNamePath =paste(getwd(),"/outputs/Grids/gridMetis.sqlite", sep = ""),
gridMetisData=paste(getwd(),"/outputs/Grids/gridMetis.RData", sep = ""),
# Grid2Poly
run_grid2poly = run_grid2poly_i,
run_state_grid2poly = run_state_grid2poly_i,
run_GCAMbasin_grid2poly = run_GCAMbasin_grid2poly_i,
run_localShape_grid2poly = run_localShape_grid2poly_i,
# If sqliteUSE is T above it will use the SQL produced in
grid=NULL, # If additional grids are to be run
# MAPS
run_maps = run_maps_i,
xRangeMap= seq(from=2000,to=2050,by=5),
legendPosition=c("LEFT","bottom"),
indvScenarios = "All",
GCMRCPSSPPol=F,
scenRefMap="gfdl-esm2m_rcp2p6_NA_NA", # Must be one of the GCM RCP scenario combinations
run_map_grid = run_map_grid_i,
run_map_state = run_map_state_i,
run_map_GCAMbasin = run_map_GCAMbasin_i,
localSubRegDataTables = localSubRegDataTables_i,
run_map_localShape = run_map_localShape_i,
run_map_localShapeGrid = run_map_localShapeGrid_i,
# IO RUN
run_io = run_io_i)
metis.runAll(run_readGCAM = run_readGCAM_i,
gcamcountryNames = gcamcountryNames_i, # Must be GCAM regions
reReadDataGCAM = reReadDataGCAM_i,
gcamdatabasePath = gcamdatabasePath_i,
gcamdatabaseName = gcamdatabaseName_i,
dataProjPath = dataProjPath_i,
dataProj = dataProj_i,
scenOrigNames = scenOrigNames_i,
scenNewNames = scenNewNames_i,
# CHARTS
dataTablesLocal = dataTablesLocal_i,
run_charts = run_charts_i,
scenRef = scenRef_i, # Default is NULL
regionCompareOnly = regionCompareOnly_i, # Default is "0"
scenarioCompareOnly = scenarioCompareOnly_i, # Default is "0"
colOrder1 = c("GCAMOrig","GCAMRef","Local Data"),
colOrderName1 = "scenario",
xCompare = c("2015","2030","2050","2100"),
xRange = c(2010,2015,2020,2025,2030,2035,2040,2045,2050),
# BOUNDARIES
run_boundaries = run_boundaries_i,
localcountryName = localcountryName_i, # Country or Region Name
localShapeFileFolder = localShapeFileFolder_i ,
localShapeFile = localShapeFile_i,
localShapeFileColName = localShapeFileColName_i, # Make sure this is one of the names(tempShape@data)
# BIA
run_bia = run_bia_i,
subsectorNAdistribute = "totalOther", # Choose between "totalOther" or "even"
# PREP GRIDS
run_prepGrids = run_prepGrids_i,
reReadDataPrepGrids=reReadDataPrepGrids_i,
sqliteUSE = T,
sqliteDBNamePath =paste(getwd(),"/outputs/Grids/gridMetis.sqlite", sep = ""),
gridMetisData=paste(getwd(),"/outputs/Grids/gridMetis.RData", sep = ""),
# Grid2Poly
run_grid2poly = run_grid2poly_i,
run_state_grid2poly = run_state_grid2poly_i,
run_GCAMbasin_grid2poly = run_GCAMbasin_grid2poly_i,
run_localShape_grid2poly = run_localShape_grid2poly_i,
# If sqliteUSE is T above it will use the SQL produced in
grid=NULL, # If additional grids are to be run
# MAPS
run_maps = run_maps_i,
xRangeMap= seq(from=2000,to=2050,by=5),
legendPosition=c("LEFT","bottom"),
indvScenarios = "All",
GCMRCPSSPPol=F,
scenRefMap="gfdl-esm2m_rcp2p6_NA_NA", # Must be one of the GCM RCP scenario combinations
run_map_grid = run_map_grid_i,
run_map_state = run_map_state_i,
run_map_GCAMbasin = run_map_GCAMbasin_i,
localSubRegDataTables = localSubRegDataTables_i,
run_map_localShapeLocalData = run_map_localShapeLocalData_i,
run_map_localShapeGCAMData = run_map_localShapeGCAMData_i,
run_map_localShapeGCAMGrid = run_map_localShapeGCAMGrid_i,
# IO RUN
run_io = run_io_i)
metis.runAll(run_readGCAM = run_readGCAM_i,
gcamcountryNames = gcamcountryNames_i, # Must be GCAM regions
reReadDataGCAM = reReadDataGCAM_i,
gcamdatabasePath = gcamdatabasePath_i,
gcamdatabaseName = gcamdatabaseName_i,
dataProjPath = dataProjPath_i,
dataProj = dataProj_i,
scenOrigNames = scenOrigNames_i,
scenNewNames = scenNewNames_i,
# CHARTS
dataTablesLocal = dataTablesLocal_i,
run_charts = run_charts_i,
scenRef = scenRef_i, # Default is NULL
regionCompareOnly = regionCompareOnly_i, # Default is "0"
scenarioCompareOnly = scenarioCompareOnly_i, # Default is "0"
colOrder1 = c("GCAMOrig","GCAMRef","Local Data"),
colOrderName1 = "scenario",
xCompare = c("2015","2030","2050","2100"),
xRange = c(2010,2015,2020,2025,2030,2035,2040,2045,2050),
# BOUNDARIES
run_boundaries = run_boundaries_i,
localcountryName = localcountryName_i, # Country or Region Name
localShapeFileFolder = localShapeFileFolder_i ,
localShapeFile = localShapeFile_i,
localShapeFileColName = localShapeFileColName_i, # Make sure this is one of the names(tempShape@data)
# BIA
run_bia = run_bia_i,
subsectorNAdistribute = "totalOther", # Choose between "totalOther" or "even"
# PREP GRIDS
run_prepGrids = run_prepGrids_i,
reReadDataPrepGrids=reReadDataPrepGrids_i,
sqliteUSE = T,
sqliteDBNamePath =paste(getwd(),"/outputs/Grids/gridMetis.sqlite", sep = ""),
gridMetisData=paste(getwd(),"/outputs/Grids/gridMetis.RData", sep = ""),
# Grid2Poly
run_grid2poly = run_grid2poly_i,
run_state_grid2poly = run_state_grid2poly_i,
run_GCAMbasin_grid2poly = run_GCAMbasin_grid2poly_i,
run_localShape_grid2poly = run_localShape_grid2poly_i,
# If sqliteUSE is T above it will use the SQL produced in
grid=NULL, # If additional grids are to be run
# MAPS
run_maps = run_maps_i,
xRangeMap= seq(from=2000,to=2050,by=5),
legendPosition=c("LEFT","bottom"),
indvScenarios = "All",
GCMRCPSSPPol=F,
scenRefMap="gfdl-esm2m_rcp2p6_NA_NA", # Must be one of the GCM RCP scenario combinations
run_map_grid = run_map_grid_i,
run_map_state = run_map_state_i,
run_map_GCAMbasin = run_map_GCAMbasin_i,
localSubRegDataTables = localSubRegDataTables_i,
run_map_localShapeLocalData = run_map_localShapeLocalData_i,
run_map_localShapeGCAMData = run_map_localShapeGCAMData_i,
run_map_localShapeGCAMGrid = run_map_localShapeGCAMGrid_i,
# IO RUN
run_io = run_io_i)
devtools::check()
gcamcountryNames_i <- c("Argentina","Uruguay","Peru","Brazil")
