# labels=labels
# labelsSize = labelsSize
# legendTitle =legendTitle
# legendStyle="kmeans"
# legendFixedBreaks=legendFixedBreaks
# legendDigits = legendDigits
# legendOutsidePosition = legendOutsidePosition
# legendPosition = NULL
# fillPalette = fillPalette
# fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",x_i,"_",scenario_i,nameAppend,"_KMEANS",sep="")
# dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/byYear",sep = "")
if(animateOn==T){
if(length(names(mapx@data%>%dplyr::select(-subRegion)))==1){
legendOutsideAnimated=legendOutsideSingle
legendTitleAnimated=legendTitle
panelLabelAnimated=paste(x_i)
legendAnimatedPosition=legendPositionS
legendTitleSizeAnim = legendTitleSizeS
legendTextSizeAnim = legendTextSizeS}else{
legendOutsideAnimated=T
legendTitleAnimated=paste(x_i,"\n",legendTitle,sep="")
panelLabelAnimated=NULL
legendAnimatedPosition=NULL
legendTitleSizeAnim = legendTitleSizeO
legendTextSizeAnim = legendTextSizeO
}
metis.map(panelLabel=panelLabelAnimated,
underLayer=underLayer, dataPolygon=mapx,
fillColumn = names(mapx@data%>%dplyr::select(-subRegion)),
legendShow = T,
legendOutside = legendOutsideAnimated,
facetFreeScale = F,
frameShow = T,
labels=labels,
labelsSize = labelsSize,
legendTitleSize = legendTitleSizeAnim,legendTextSize = legendTextSizeAnim,
legendTitle =legendTitleAnimated,
legendStyle="fixed",
legendBreaks = animKmeanBreaksPoly,
legendFixedBreaks=legendFixedBreaks,
legendDigits = animLegendDigits,
legendOutsidePosition = legendOutsidePosition,
legendPosition = legendAnimatedPosition,
fillPalette = fillPalette,
bgColor = bgColorChosen,
figWidth=figWidth,
figHeight=figHeight,
fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",x_i,"_",scenario_i,nameAppend,"_KMEANS_ANIMATE",sep=""),
dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/byYear/animate_",param_i,sep = ""))
}
metis.map(underLayer=underLayer, dataPolygon=mapx,
fillColumn = names(mapx@data%>%dplyr::select(-subRegion)),
legendShow = T,
legendOutside = T,
facetFreeScale = F,
frameShow = T,
labels=labels,
labelsSize = labelsSize,
legendTitle =legendTitle,legendTitleSize = legendTitleSizeO,legendTextSize = legendTextSizeO,
legendStyle="pretty",
legendFixedBreaks=legendFixedBreaks,
legendDigits = legendDigits,
legendOutsidePosition = legendOutsidePosition,
legendPosition = NULL,
fillPalette = fillPalette,
bgColor = bgColorChosen,
figWidth=figWidth,figHeight=figHeight,
fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",x_i,"_",scenario_i,nameAppend,"_PRETTY",sep=""),
dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/byYear",sep = ""))
if(animateOn==T){
if(length(names(mapx@data%>%dplyr::select(-subRegion)))==1){
legendOutsideAnimated=legendOutsideSingle
legendTitleAnimated=legendTitle
panelLabelAnimated=paste(x_i)
legendAnimatedPosition=legendPositionS
legendTitleSizeAnim = legendTitleSizeS
legendTextSizeAnim = legendTextSizeS}else{
legendOutsideAnimated=T
legendTitleAnimated=paste(x_i,"\n",legendTitle,sep="")
panelLabelAnimated=NULL
legendAnimatedPosition=NULL
legendTitleSizeAnim = legendTitleSizeO
legendTextSizeAnim = legendTextSizeO
}
metis.map(panelLabel=panelLabelAnimated,
underLayer=underLayer, dataPolygon=mapx,
fillColumn = names(mapx@data%>%dplyr::select(-subRegion)),
legendShow = T,
legendOutside = legendOutsideAnimated,
facetFreeScale = F,
frameShow = T,
labels=labels,
labelsSize = labelsSize,
legendTitle =legendTitleAnimated,
legendTitleSize = legendTitleSizeAnim,legendTextSize = legendTextSizeAnim,
legendStyle="fixed",
legendBreaks = animPrettyBreaksPoly,
legendFixedBreaks=legendFixedBreaks,
legendDigits = animLegendDigits,
legendOutsidePosition = legendOutsidePosition,
legendPosition = legendAnimatedPosition,
fillPalette = fillPalette,
bgColor = bgColorChosen,
figWidth=figWidth,
figHeight=figHeight,
fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",x_i,"_",scenario_i,nameAppend,"_PRETTY_ANIMATE",sep=""),
dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/byYear/animate_",param_i,sep = ""))
}
metis.map(underLayer=underLayer, dataPolygon=mapx,
fillColumn = names(mapx@data%>%dplyr::select(-subRegion)),
legendShow = T,
legendOutside = F,
facetFreeScale = T,
frameShow = T,
labels=labels,
labelsSize = labelsSize,
legendTitle =legendTitle,legendTitleSize = legendTitleSizeI,legendTextSize = legendTextSizeI,
legendStyle="kmeans",
legendFixedBreaks=legendFixedBreaks,
legendDigits = NULL,
legendOutsidePosition = legendOutsidePosition,
legendPosition = legendPosition,
fillPalette = fillPalette,
bgColor = bgColorChosen,figWidth=figWidth,figHeight=figHeight,
fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",x_i,"_",scenario_i,nameAppend,"_FREESCALE",sep=""),
dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/byYear",sep = ""))
if(animateOn==T){
if(length(names(mapx@data%>%dplyr::select(-subRegion)))==1){
legendTitleAnimated=legendTitle
panelLabelAnimated=paste(x_i)
legendOutsideAnimated=legendOutsideSingle
legendAnimatedPosition=legendPositionS
legendTitleSizeAnim = legendTitleSizeS
legendTextSizeAnim = legendTextSizeS}else{
legendTitleAnimated=paste(x_i,"\n",legendTitle,sep="")
panelLabelAnimated=NULL
legendOutsideAnimated=F
legendAnimatedPosition=NULL
legendTitleSizeAnim = legendTitleSizeI
legendTextSizeAnim = legendTextSizeI
}
metis.map(panelLabel= panelLabelAnimated,underLayer=underLayer, dataPolygon=mapx,
fillColumn = names(mapx@data%>%dplyr::select(-subRegion)),
legendShow = T,
legendOutside = legendOutsideAnimated,
facetFreeScale = T,
frameShow = T,
labels=labels,
labelsSize = labelsSize,
legendTitle =legendTitleAnimated,
legendTitleSize = legendTitleSizeAnim,legendTextSize = legendTextSizeAnim,
legendStyle="kmeans",
legendFixedBreaks=legendFixedBreaks,
legendDigits = NULL,
legendOutsidePosition = legendOutsidePosition,
legendPosition = legendAnimatedPosition,
fillPalette = fillPalette,
bgColor = bgColorChosen,
figWidth=figWidth,
figHeight=figHeight,
fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",x_i,"_",scenario_i,nameAppend,"_FREESCALE_ANIMATE",sep=""),
dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/byYear/animate_",param_i,sep = ""))
}
}# if(nrow(datax)>1){
}# Close years loop
# Animate 1 : each param: If class > 1 { (Map x Class) x Anim Years}
if(animateOn==T){
checkIM <- system("cmd.exe",input="magick -version")
if (checkIM!=0) stop("Could not find ImageMagick. Make sure it is installed and included in the systems PATH")
animName<-paste("anim_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",scenario_i,nameAppend,"_PRETTY.gif",sep="")
processed <- system("cmd.exe",input=paste("magick -delay ",
delay=delay,
" ", paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/byYear/animate_",param_i,sep = ""),
"/*PRETTY_ANIMATE.png \"",
paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/",
animName,sep = ""),
"\"",sep=""))
animName<-paste("anim_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",scenario_i,nameAppend,"_KMEANS.gif",sep="")
processed <- system("cmd.exe",input=paste("magick -delay ",
delay=delay,
" ", paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/byYear/animate_",param_i,sep = ""),
"/*KMEANS_ANIMATE.png \"",
paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/",
animName,sep = ""),
"\"",sep=""))
animName<-paste("anim_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",scenario_i,nameAppend,"_FREESCALE.gif",sep="")
processed <- system("cmd.exe",input=paste("magick -delay ",
delay=delay,
" ", paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/byYear/animate_",param_i,sep = ""),
"/*FREESCALE_ANIMATE.png \"",
paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/",
animName,sep = ""),
"\"",sep=""))
unlink(paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,"/byYear/animate_",param_i,sep = ""), recursive = TRUE) #-------------- cleaning up plots and temporary variables
} # If Animate ON==t
#------------------------------
# Figure 2 : each param: If class ==1 { Map x years}
#-----------------------------
checkTbl<-shapeTbl%>%dplyr::filter(region==boundaryRegionsSelect,scenario==scenario_i,subRegType==subRegType_i,param==param_i)
checkTbl<-droplevels(checkTbl)
if(length(unique(checkTbl$class))==1){
rm(checkTbl)
datax<-shapeTbl%>%dplyr::filter(region==boundaryRegionsSelect,scenario==scenario_i,subRegType==subRegType_i,param==param_i)
if(nrow(datax)>1){
legendTitle<-paste(unique(datax$units),sep="")
fillPalette<-unique(datax$classPalette)
datax<-datax%>%dplyr::select(subRegion,x,value)%>%
tidyr::spread(key=x,value=value)
scaleData<-datax%>%dplyr::select(-subRegion)
if(mean(range(scaleData,na.rm=T),na.rm = T)<0.01 & mean(range(scaleData,na.rm=T),na.rm = T)>(-0.01)){legendDigits<-4}else{
if(mean(range(scaleData,na.rm=T),na.rm = T)<0.1 & mean(range(scaleData,na.rm=T),na.rm = T)>(-0.1)){legendDigits<-3}else{
if(mean(range(scaleData,na.rm=T),na.rm = T)<1 & mean(range(scaleData,na.rm=T),na.rm = T)>(-1)){legendDigits<-2}else{
if(mean(range(scaleData,na.rm=T),na.rm = T)<10 & mean(range(scaleData,na.rm=T),na.rm = T)>(-10)){legendDigits<-1}else{legendDigits<-0}}}}
mapx<-shape
mapx@data<-mapx@data%>%dplyr::left_join(datax)%>%
dplyr::select(names(datax))
metis.map(underLayer=underLayer, dataPolygon=mapx,
fillColumn = names(mapx@data%>%dplyr::select(-subRegion)),
legendShow = T,
legendOutside = T,
facetFreeScale = F,
frameShow = T,
labels=labels,
labelsSize = labelsSize,
legendTitle =legendTitle,legendTitleSize = legendTitleSizeO,legendTextSize = legendTextSizeO,
legendStyle="kmeans",
legendFixedBreaks=legendFixedBreaks,
legendDigits = legendDigits,
legendOutsidePosition = legendOutsidePosition,
legendPosition = NULL,
fillPalette = fillPalette,
bgColor = bgColorChosen,figWidth=figWidth,figHeight=figHeight,
fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",scenario_i,nameAppend,"_KMEANS",sep=""),
dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,sep = ""))
metis.map(underLayer=underLayer, dataPolygon=mapx,
fillColumn = names(mapx@data%>%dplyr::select(-subRegion)),
legendShow = T,
legendOutside = T,
facetFreeScale = F,
frameShow = T,
labels=labels,
labelsSize = labelsSize,
legendTitle =legendTitle,legendTitleSize = legendTitleSizeO,legendTextSize = legendTextSizeO,
legendStyle="pretty",
legendFixedBreaks=legendFixedBreaks,
legendDigits = legendDigits,
legendOutsidePosition = legendOutsidePosition,
legendPosition = NULL,
fillPalette = fillPalette,
bgColor = bgColorChosen,figWidth=figWidth,figHeight=figHeight,
fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",scenario_i,nameAppend,"_PRETTY",sep=""),
dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,sep = ""))
metis.map(underLayer=underLayer, dataPolygon=mapx,
fillColumn = names(mapx@data%>%dplyr::select(-subRegion)),
legendShow = T,
legendOutside = F,
facetFreeScale = T,
frameShow = T,
labels=labels,
labelsSize = labelsSize,
legendTitle =legendTitle,legendTitleSize = legendTitleSizeO,legendTextSize = legendTextSizeO,
legendStyle="kmeans",
legendFixedBreaks=legendFixedBreaks,
legendDigits = NULL,
legendOutsidePosition = legendOutsidePosition,
legendPosition = legendPosition,
fillPalette = fillPalette,
bgColor = bgColorChosen,figWidth=figWidth,figHeight=figHeight,
fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",scenario_i,nameAppend,"_FREESCALE",sep=""),
dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,sep = ""))
# Animate 2 : each param: If class == 1 { (Map x Anim Years}
}  #if(nrow(datax)>1){
# Calculate Mean
datax<-shapeTbl%>%dplyr::filter(region==boundaryRegionsSelect,scenario==scenario_i,subRegType==subRegType_i,param==param_i)
if(nrow(datax)>1){
legendTitle<-paste(unique(datax$units),sep="")
fillPalette<-unique(datax$classPalette)
datax<-datax%>%dplyr::select(subRegion,x,value)%>%
dplyr::group_by(subRegion)%>%
dplyr::summarize(!!paste("Mean_",min(xRange),"to",max(xRange),sep=""):=mean(value))%>%
dplyr::ungroup()
scaleData<-datax%>%dplyr::select(-subRegion)
if(mean(range(scaleData,na.rm=T),na.rm = T)<0.01 & mean(range(scaleData,na.rm=T),na.rm = T)>(-0.01)){legendDigits<-4}else{
if(mean(range(scaleData,na.rm=T),na.rm = T)<0.1 & mean(range(scaleData,na.rm=T),na.rm = T)>(-0.1)){legendDigits<-3}else{
if(mean(range(scaleData,na.rm=T),na.rm = T)<1 & mean(range(scaleData,na.rm=T),na.rm = T)>(-1)){legendDigits<-2}else{
if(mean(range(scaleData,na.rm=T),na.rm = T)<10 & mean(range(scaleData,na.rm=T),na.rm = T)>(-10)){legendDigits<-1}else{legendDigits<-0}}}}
mapx<-shape
mapx@data<-mapx@data%>%dplyr::left_join(datax)%>%
dplyr::select(names(datax))
metis.map(underLayer=underLayer, dataPolygon=mapx,
fillColumn = names(mapx@data%>%dplyr::select(-subRegion)),
legendShow = T,
legendOutside = legendOutsideSingle,
facetFreeScale = F,
frameShow = T,
labels=labels,
labelsSize = labelsSize,
legendTitle =paste(legendTitle,"\n",names(datax)[!names(datax) %in% c("subRegion")],sep=""),
legendTitleSize = legendTitleSizeS,legendTextSize = legendTextSizeS,
legendStyle="kmeans",
legendFixedBreaks=legendFixedBreaks,
legendDigits = legendDigits,
legendOutsidePosition = legendOutsidePosition,
legendPosition = legendPositionS,
fillPalette = fillPalette,
bgColor = bgColorChosen,figWidth=figWidth,figHeight=figHeight,
fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",scenario_i,nameAppend,"_MEAN_KMEANS",sep=""),
dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,sep = ""))
metis.map(underLayer=underLayer, dataPolygon=mapx,
fillColumn = names(mapx@data%>%dplyr::select(-subRegion)),
legendShow = T,
legendOutside = legendOutsideSingle,
facetFreeScale = F,
frameShow = T,
labels=labels,
labelsSize = labelsSize,
legendTitle =paste(legendTitle,"\n",names(datax)[!names(datax) %in% c("subRegion")],sep=""),
legendTitleSize = legendTitleSizeS,legendTextSize = legendTextSizeS,
legendStyle="pretty",
legendFixedBreaks=legendFixedBreaks,
legendDigits = legendDigits,
legendOutsidePosition = legendOutsidePosition,
legendPosition = legendPositionS,
fillPalette = fillPalette,
bgColor = bgColorChosen,figWidth=figWidth,figHeight=figHeight,
fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",scenario_i,nameAppend,"_MEAN_PRETTY",sep=""),
dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,sep = ""))
metis.map(underLayer=underLayer, dataPolygon=mapx,
fillColumn = names(mapx@data%>%dplyr::select(-subRegion)),
legendShow = T,
legendOutside = legendOutsideSingle,
facetFreeScale = T,
frameShow = T,
labels=labels,
labelsSize = labelsSize,
legendTitle =paste(legendTitle,"\n",names(datax)[!names(datax) %in% c("subRegion")],sep=""),
legendTitleSize = legendTitleSizeS,legendTextSize = legendTextSizeS,
legendStyle="kmeans",
legendFixedBreaks=legendFixedBreaks,
legendDigits = NULL,
legendOutsidePosition = legendOutsidePosition,
legendPosition = legendPositionS,
fillPalette = fillPalette,
bgColor = bgColorChosen,figWidth=figWidth,figHeight=figHeight,
fileName = paste("map_",boundaryRegionsSelect,"_",subRegType_i,"_",param_i,"_",scenario_i,nameAppend,"_MEAN_FREESCALE",sep=""),
dirOutputs = paste(dirOutputs,"/Maps/",boundaryRegionsSelect,"/",subRegion_i,"/", scenario_i,sep = ""))
# Animate 2 : each param: If class == 1 { (Map x Anim Years}
}  #if(nrow(datax)>1){
} # If number of classes == 1
} # close Params
} # Close subRegType loop
} # Close scenario loop
} # Clsoe if shapeTbl is NUll
} # Close Function
polygonDataTables_i=paste(getwd(),"/outputs/Maps/Tables/subReg_origData_byClass_Colombia_subBasin_origDownscaled_local.csv",sep="")
a<-read.csv(polygonDataTables_i); head(a); unique(a$scenario); unique(a$param); unique(a$x)
#gridDataTables_i=paste(getwd(),"/outputs/Grids/gridCropped_Colombia_state_NE.csv",sep="")
xRange_i= seq(from=1950,to=2000,by=5)
legendPosition_i=c("LEFT","bottom")
legendOutsideSingle_i=F
animateOn_i=T
delay_i=100
scenRef_i="Eg1"
boundaryRegShape_i = NULL
boundaryRegShpFolder_i=paste(getwd(),"/dataFiles/gis/naturalEarth",sep="")
boundaryRegShpFile_i=paste("ne_10m_admin_0_countries",sep="")
boundaryRegCol_i="NAME"
boundaryRegionsSelect_i="Colombia"
subRegShape_i = NULL
subRegShpFolder_i = paste(getwd(),"/dataFiles/gis/admin_Colombia",sep = "")
subRegShpFile_i = paste("colombiaLocalBasin",sep= "")
subRegCol_i = "NOM_ZH"
subRegType_i = "subBasin"
nameAppend_i = "_local"
metis.mapProcess(polygonDataTables=polygonDataTables_i,
#gridDataTables=gridDataTables_i,
xRange=xRange_i,
boundaryRegShape=boundaryRegShape_i,
boundaryRegShpFolder=boundaryRegShpFolder_i,
boundaryRegShpFile=boundaryRegShpFile_i,
boundaryRegCol=boundaryRegCol_i,
boundaryRegionsSelect=boundaryRegionsSelect_i,
subRegShape=subRegShape_i,
subRegShpFolder=subRegShpFolder_i,
subRegShpFile=subRegShpFile_i,
subRegCol=subRegCol_i,
subRegType=subRegType_i,
nameAppend=nameAppend_i,
legendOutsideSingle=legendOutsideSingle_i,
legendPosition=legendPosition_i,
animateOn=animateOn_i,
delay=delay_i,
scenRef=scenRef_i,
extension=T,
expandPercent = 3,
figWidth=5,
figHeight=7
)
#-----------
# Mapping
#-------------
#examplePolygonTable<-paste(getwd(),"/outputs/Maps/Tables/subReg_origData_byClass_Argentina_subRegType_origDownscaled_hydrobidBermeo3.csv",sep="")
polygonDataTables_i=paste(getwd(),"/outputs/Maps/Tables/subReg_origData_byClass_Colombia_state_origDownscaled_NE.csv",sep="")
a<-read.csv(polygonDataTables_i); head(a); unique(a$scenario); unique(a$param); unique(a$x)
gridDataTables_i=paste(getwd(),"/outputs/Grids/gridCropped_Colombia_state_NE.csv",sep="")
xRange_i= seq(from=1955,to=2000,by=5)
legendPosition_i=c("LEFT","bottom")
legendOutsideSingle_i=F
animateOn_i=T
delay_i=100
scenRef_i="Eg1"
boundaryRegShape_i = NULL
boundaryRegShpFolder_i=paste(getwd(),"/dataFiles/gis/naturalEarth",sep="")
boundaryRegShpFile_i=paste("ne_10m_admin_0_countries",sep="")
boundaryRegCol_i="NAME"
boundaryRegionsSelect_i="Colombia"
subRegShape_i = NULL
subRegShpFolder_i = paste(getwd(),"/dataFiles/gis/admin_Colombia",sep = "")
subRegShpFile_i = paste("colombiaNE1",sep= "")
subRegCol_i = "name"
subRegType_i = "state"
nameAppend_i = "_NE"
metis.mapProcess(polygonDataTables=polygonDataTables_i,
gridDataTables=gridDataTables_i,
xRange=xRange_i,
boundaryRegShape=boundaryRegShape_i,
boundaryRegShpFolder=boundaryRegShpFolder_i,
boundaryRegShpFile=boundaryRegShpFile_i,
boundaryRegCol=boundaryRegCol_i,
boundaryRegionsSelect=boundaryRegionsSelect_i,
subRegShape=subRegShape_i,
subRegShpFolder=subRegShpFolder_i,
subRegShpFile=subRegShpFile_i,
subRegCol=subRegCol_i,
subRegType=subRegType_i,
nameAppend=nameAppend_i,
legendOutsideSingle=legendOutsideSingle_i,
legendPosition=legendPosition_i,
animateOn=animateOn_i,
delay=delay_i,
scenRef=scenRef_i,
extension=T,
expandPercent = 3,
figWidth=6,
figHeight=7
)
# polygonDataTables=polygonDataTables_i
# gridDataTables=gridDataTables_i
# xRange=xRange_i
# boundaryRegShape=boundaryRegShape_i
# boundaryRegShpFolder=boundaryRegShpFolder_i
# boundaryRegShpFile=boundaryRegShpFile_i
# boundaryRegCol=boundaryRegCol_i
# boundaryRegionsSelect=boundaryRegionsSelect_i
# subRegShape=subRegShape_i
# subRegShpFolder=subRegShpFolder_i
# subRegShpFile=subRegShpFile_i
# subRegCol=subRegCol_i
# subRegType=subRegType_i
# nameAppend=nameAppend_i
# legendPosition=legendPosition_i
# animateOn=animateOn_i
# delay=delay_i
# scenRef=scenRef_i
# extension=T
# expandPercent = 2
# legendTextSize=legendTextSize_i
# legendTitleSize=legendTitleSize_i
polygonDataTables_i=paste(getwd(),"/outputs/Maps/Tables/subReg_origData_byClass_Colombia_subBasin_origDownscaled_local.csv",sep="")
a<-read.csv(polygonDataTables_i); head(a); unique(a$scenario); unique(a$param); unique(a$x)
#gridDataTables_i=paste(getwd(),"/outputs/Grids/gridCropped_Colombia_state_NE.csv",sep="")
xRange_i= seq(from=1950,to=2000,by=5)
legendPosition_i=c("LEFT","bottom")
legendOutsideSingle_i=F
animateOn_i=T
delay_i=100
scenRef_i="Eg1"
boundaryRegShape_i = NULL
boundaryRegShpFolder_i=paste(getwd(),"/dataFiles/gis/naturalEarth",sep="")
boundaryRegShpFile_i=paste("ne_10m_admin_0_countries",sep="")
boundaryRegCol_i="NAME"
boundaryRegionsSelect_i="Colombia"
subRegShape_i = NULL
subRegShpFolder_i = paste(getwd(),"/dataFiles/gis/admin_Colombia",sep = "")
subRegShpFile_i = paste("colombiaLocalBasin",sep= "")
subRegCol_i = "NOM_ZH"
subRegType_i = "subBasin"
nameAppend_i = "_local"
metis.mapProcess(polygonDataTables=polygonDataTables_i,
#gridDataTables=gridDataTables_i,
xRange=xRange_i,
boundaryRegShape=boundaryRegShape_i,
boundaryRegShpFolder=boundaryRegShpFolder_i,
boundaryRegShpFile=boundaryRegShpFile_i,
boundaryRegCol=boundaryRegCol_i,
boundaryRegionsSelect=boundaryRegionsSelect_i,
subRegShape=subRegShape_i,
subRegShpFolder=subRegShpFolder_i,
subRegShpFile=subRegShpFile_i,
subRegCol=subRegCol_i,
subRegType=subRegType_i,
nameAppend=nameAppend_i,
legendOutsideSingle=legendOutsideSingle_i,
legendPosition=legendPosition_i,
animateOn=animateOn_i,
delay=delay_i,
scenRef=scenRef_i,
extension=T,
expandPercent = 3,
figWidth=6,
figHeight=7
)
