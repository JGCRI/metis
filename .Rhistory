sizeBarLines=0
sizeLines=1.5
nameAppend=""
rTable=rTable
#dataTables=dataTables
paramsSelect=paramsSelect
regionsSelect=regionsSelect
xCompare=c("2015","2030","2050","2100")
scenRef="Eg1"
dirOutputs=paste(getwd(),"/outputs",sep="")
pdfpng="png"
regionCompareOnly=0
NULL->scenario->value->x->region->param->origValue->origScen->origQuery->
origUnits->origX->sources->vintage->class1->classLabel1->classPalette1->
class2->classLabel2->classPalette2->i->j->k->figWmult
addMissing<-function(data){
if(!"scenario"%in%names(data)){data<-data%>%dplyr::mutate(scenario="scenario")}
if(!"region"%in%names(data)){data<-data%>%dplyr::mutate(region="region")}
if(!"param"%in%names(data)){data<-data%>%dplyr::mutate(param="param")}
if(!"value"%in%names(data)){data<-data%>%dplyr::mutate(value=get(yData))}
if(!"origValue"%in%names(data)){data<-data%>%dplyr::mutate(origValue=value)}
if(!"units"%in%names(data)){data<-data%>%dplyr::mutate(units="units")}
if(!"x"%in%names(data)){data<-data%>%dplyr::mutate(x="x")}
if(!"vintage" %in% names(data)){data<-data%>%dplyr::mutate(vintage = paste("Vint_", x, sep = ""))}
if(!"xLabel"%in%names(data)){
if(is.null(xLabel)){data<-data%>%dplyr::mutate(xLabel="xLabel")}else{
data<-data%>%dplyr::mutate(xLabel=xLabel)}}
if(!"aggregate"%in%names(data)){ if(is.null(aggregate)){data<-data%>%dplyr::mutate(aggregate="aggregate")}else{
data<-data%>%dplyr::mutate(aggregate=aggregate)}}
if(!"class1"%in%names(data)){
if("class"%in%names(data)){
data<-data%>%dplyr::rename(class1=class)}else
{data<-data%>%dplyr::mutate(class1="class1")}}
if(!"classLabel1"%in%names(data)){ if(is.null(classPalette)){data<-data%>%dplyr::mutate(classLabel1="classLabel1")}
if(!"classPalette1"%in%names(data)){data<-data%>%dplyr::mutate(classPalette1="pal_Basic")}else{
data<-data%>%dplyr::mutate(classPalette1=classPalette)}}
if(!"class2"%in%names(data)){data<-data%>%dplyr::mutate(class2="class2")}
if(!"classLabel2"%in%names(data)){data<-data%>%dplyr::mutate(classLabel2="classLabel2")}
if(!"classPalette2"%in%names(data)){ if(is.null(classPalette)){data<-data%>%dplyr::mutate(classPalette2="pal_Basic")}else{
data<-data%>%dplyr::mutate(classPalette2=classPalette)}}
if(!"origScen"%in%names(data)){data<-data%>%dplyr::mutate(origScen="origScen")}
if(!"origQuery"%in%names(data)){data<-data%>%dplyr::mutate(origQuery="origQuery")}
if(!"origUnits"%in%names(data)){data<-data%>%dplyr::mutate(origUnits="origUnits")}
if(!"origX"%in%names(data)){data<-data%>%dplyr::mutate(origX="origX")}
if(!"sources"%in%names(data)){data<-data%>%dplyr::mutate(sources="sources")}
return(data)
}
tbl<-tibble::tibble()
if(is.null(dataTables) & is.null(rTable)){
stop ("No dataTable or rTables have been provided.")
}
# Read in the data from the function metis.readgcam
rTable <- dataGCAM$data;
#
rTable=rTable
#dataTables=dataTables
paramsSelect=paramsSelect
regionsSelect=regionsSelect
xCompare=c("2015","2030","2050","2100")
scenRef="Eg1"
dirOutputs=paste(getwd(),"/outputs",sep="")
pdfpng="png"
regionCompareOnly=0
tbl<-tibble::tibble()
if(is.null(dataTables) & is.null(rTable)){
stop ("No dataTable or rTables have been provided.")
}
# Read in csv (dataTables)
#------------------------
if(!is.null(dataTables)){
for(i in dataTables){
if(file.exists(i)){
tblNew<-utils::read.csv(paste(i), stringsAsFactors = F)%>%tibble::as.tibble()
tbl<-dplyr::bind_rows(tbl,tblNew)
} else {stop(paste(i," does not exist"))}
}
# Join relevant colors and classes using the mapping file if it exists
if(file.exists(paste(getwd(),"/dataFiles/mapping/template_Regional_mapping.csv", sep = ""))){
map<-utils::read.csv(paste(getwd(),"/dataFiles/mapping/template_Regional_mapping.csv", sep = ""), stringsAsFactors = F)%>%tibble::as.tibble()
tbl<-tbl%>%dplyr::left_join(map%>%dplyr::select(-class1,-class2),by=c("param","units"))
}
# Add missing columns
tbl<-addMissing(tbl)
}
# Read in R data (rTable)
#------------------------
if(!is.null(rTable)){
rTable<-addMissing(rTable)
rTable$origScen=as.character(rTable$origScen)
rTable$origQuery=as.character(rTable$origQuery)
rTable$origUnits=as.character(rTable$origUnits)
rTable$origX=as.character(rTable$origX)
tbl<-dplyr::bind_rows(tbl,rTable)
}
if(any(regionsSelect!="All")){
print("One or more items in regionsSelect is 'All' so running analysis for all regions.")
tbl<-tbl%>%unique()%>%dplyr::filter(region %in% regionsSelect)}
if(any(xRange!="All")){if(is.numeric(tbl$x)){tbl<-tbl%>%dplyr::filter(x %in% xRange)}}
if(any(is.na(unique(tbl$scenario)))){stop("NA scenario not valid. Please check your input scenarios.")}
#------------------
# Create Folders if needed
#------------------
if (!dir.exists(dirOutputs)){
dir.create(dirOutputs)}
if (!dir.exists(paste(dirOutputs, "/Charts", sep = ""))){
dir.create(paste(dirOutputs, "/Charts", sep = ""))}
if(length(unique(tbl$region))>1){
if (!dir.exists(paste(dirOutputs, "/Charts/compareRegions", sep = ""))){
dir.create(paste(dirOutputs, "/Charts/compareRegions", sep = ""))}
if (!dir.exists(paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""))){
dir.create(paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""))}
for (j in unique(tbl$scenario)) {
if (!dir.exists(paste(dirOutputs, "/Charts/compareRegions","/", j,sep = "")))
{dir.create(paste(dirOutputs, "/Charts/compareRegions","/", j,sep = ""))}
}
} # If length(unique(tbl$region))>1
if(regionCompareOnly!=1){
for (i in unique(tbl$region)){
tbl_r<-tbl%>%dplyr::filter(region==i)
if (!dir.exists(paste(dirOutputs, "/Charts/", i, sep = ""))){
dir.create(paste(dirOutputs, "/Charts/", i, sep = ""))}
if(length(unique(tbl_r$scenario))>1){
if (!dir.exists(paste(dirOutputs, "/Charts/", i, "/compareScen",sep = ""))){
dir.create(paste(dirOutputs, "/Charts/", i, "/compareScen",sep = ""))}}
for (j in unique(tbl_r$scenario)) {
if (!dir.exists(paste(dirOutputs, "/Charts/", i,"/", j,sep = "")))
{dir.create(paste(dirOutputs, "/Charts/", i,"/", j,sep = ""))}
}
}
} # Close if(regionCompareOnly!=1)
# Aggregate across classes
tblAggsums<-tbl%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(scenario,region,param,units,x,value)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(sum))
tblAggmeans<-tbl%>%
dplyr::filter(aggregate=="mean")%>%
dplyr::select(scenario,region,param,units,x, value)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(mean))
tblAgg<-dplyr::bind_rows(tblAggsums,tblAggmeans)%>%dplyr::ungroup()
for(i in unique(tbl$region)){
utils::write.csv(tbl%>%
dplyr::filter(region == i)%>%
dplyr::select(scenario,region,param,units, class1, class2, x, value, vintage)%>%
tidyr::spread(scenario,yData),
file = paste(dirOutputs, "/Charts/Tables_regional_",i,".csv", sep = ""),row.names = F)
utils::write.csv(tblAgg%>%
dplyr::filter(region == i)%>%
tidyr::spread(scenario,yData),
file = paste(dirOutputs, "/Charts/Tables_regional_",i,"_aggClass.csv", sep = ""),row.names = F)
}
utils::write.csv(tbl%>%
dplyr::select(scenario, region, units, class1, class2, x, value, vintage)%>%
tidyr::spread(scenario,yData),
file = paste(dirOutputs, "/Charts/Tables_regional_allRegions.csv", sep = ""),row.names = F)
utils::write.csv(tblAgg%>%
tidyr::spread(scenario,yData),
file = paste(dirOutputs, "/Charts/Tables_regional_allRegions_aggClass.csv", sep = ""),row.names = F)
if(any(paramsSelect!="All")){
if(all(paramsSelect %in% unique(tbl$param))){
print(paste("Running paramaters: ",  paste(paramsSelect[(paramsSelect %in% unique(tbl$param))],collapse=", "), sep=""))
tbl<-tbl%>%dplyr::filter(param %in% paramsSelect[(paramsSelect %in% unique(tbl$param))])
}else{
print(paste("Parameters not available in data: ", paste(paramsSelect[!(paramsSelect %in% unique(tbl$param))],collapse=", "), sep=""))
print(paste("Running remaining paramaters: ",  paste(paramsSelect[(paramsSelect %in% unique(tbl$param))],collapse=", "), sep=""))
tbl<-tbl%>%dplyr::filter(param %in% paramsSelect[(paramsSelect %in% unique(tbl$param))])
}
}
if(any(regionsSelect!="All")){
if(all(regionsSelect %in% unique(tbl$region))){
print(paste("Running regions: ",  paste(regionsSelect[(regionsSelect %in% unique(tbl$region))],collapse=", "), sep=""))
tbl<-tbl%>%dplyr::filter(region %in% regionsSelect[(regionsSelect %in% unique(tbl$region))])
}else{
print(paste("Regions not available in data: ", paste(regionsSelect[!(regionsSelect %in% unique(tbl$region))],collapse=", "), sep=""))
print(paste("Running remaining regions: ",  paste(regionsSelect[(regionsSelect %in% unique(tbl$region))],collapse=", "), sep=""))
tbl<-tbl%>%dplyr::filter(region %in% regionsSelect[(regionsSelect %in% unique(tbl$region))])
}
}
if(length(unique(tbl$region))>1){
for(j in unique(tbl$scenario)){
for(k in unique(tbl$param)){
tbl_sp<-tbl%>%dplyr::filter(scenario==j,
param==k)
if(nrow(tbl_sp)>0){
if(length(unique(tbl_sp$class1))>1){figWMult=1.3}else{figWmult=1}
# Aggregated Class 1
# Aggregate across classes
tblAggsums<-tbl_sp%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(sum))
tblAggmeans<-tbl_sp%>%
dplyr::filter(aggregate=="mean")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(mean))
tbl_spC1<-dplyr::bind_rows(tblAggsums,tblAggmeans)%>%dplyr::ungroup()
# Bar Chart
metis.chart(tbl_spC1, xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "bar",facet_columns="region",facet_rows="none",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions","/", j,sep = ""),
fileName = paste(k,"_figBar_",j,"_compareRegions",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_sp$region))/2),1)*figWMult,pdfpng=pdfpng
)
# Line Chart
metis.chart(tbl_spC1,xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "line",facet_columns="region",facet_rows="none",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions","/", j,sep = ""),
fileName = paste(k,"_figLines_",j,"_compareRegions",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_sp$region))/2),1)*figWMult,pdfpng=pdfpng
)
# If class 2 available
if(length(unique(tbl_sp$class2))>1){
# Bar Chart
metis.chart(tbl_sp, xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "bar",facet_columns="region",facet_rows="class2",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions","/", j,sep = ""),
fileName = paste(k,"_figBar_",j,"_compareRegionsClass2",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_sp$region))/2),1)*figWMult,
figHeight = 9*max((length(unique(tbl_sp$class2))/2),1),pdfpng=pdfpng
)
# Line Chart
metis.chart(tbl_sp,xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "line",facet_columns="region",facet_rows="class2",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions","/", j,sep = ""),
fileName = paste(k,"_figLines_",j,"_compareRegionsClass2",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_sp$region))/2),1)*figWMult,
figHeight = 9*max((length(unique(tbl_sp$class2))/2),1),pdfpng=pdfpng
)
}
} # Close if(nrow(tbl_sp)>0)
} # close loop for param
} # close loop for scenario
#------------------
# Compare Scenarios for each region
#------------------
if(length(unique(tbl$scenario))>1){
for(j in unique(tbl$param)){
tbl_p<-tbl%>%dplyr::filter(param==j)
if(length(unique((tbl_p%>%dplyr::filter(value>0))$scenario))>1){
if(nrow(tbl_p)>0){
if(length(unique(tbl_p$class1))>1){figWMult=1.3}else{figWmult=1}
# Aggregated Class 1
# Aggregate across classes
tblAggsums<-tbl_p%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(sum))
tblAggmeans<-tbl_p%>%
dplyr::filter(aggregate=="mean")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(mean))
tbl_pC1<-dplyr::bind_rows(tblAggsums,tblAggmeans)%>%dplyr::ungroup()
# Bar Chart
metis.chart(tbl_pC1, xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "bar",facet_columns="scenario",facet_rows="region",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""),
fileName = paste(j,"_figBar_compareScenRegions",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_p$scenario))/2),1)*figWMult,
figHeight = 9*max((length(unique(tbl_p$region))/2),1),pdfpng=pdfpng
)
# Line Chart
metis.chart(tbl_pC1,xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "line",facet_columns="scenario",facet_rows="region",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""),
fileName = paste(j,"_figLine_compareScenRegions",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_p$scenario))/2),1)*figWMult,
figHeight = 9*max((length(unique(tbl_p$region))/2),1),pdfpng=pdfpng
)
#-------------------------
# Plot with Scenarios on X for Chosen Years
#------------------------
if(any(!xCompare %in% unique(tbl_p[[xData]]))){
print(paste("xCompare not available in data: ", paste(xCompare[!(xCompare %in% unique(tbl_p[[xData]]))],collapse=", "), sep=""))
print(paste("Comparing for only: ",  paste(xCompare[(xCompare %in% unique(tbl_p[[xData]]))],collapse=", "), sep=""))
tbl_py <- tbl_p%>%dplyr::filter(x %in% xCompare)}else{
if(length(unique(tbl_p[[xData]]))<5){
tbl_py <- tbl_p}else{
xCompare<-c(unique(tbl_p[[xData]])[1],
unique(tbl_p[[xData]])[round(length(unique(tbl_p[[xData]]))/2)],
utils::tail(unique(tbl_p[[xData]]),n=1)
)
tbl_py <- tbl_p%>%dplyr::filter(x %in% xCompare)
}
}
if(length(unique(tbl_py$class1))>1){figWMult=1.3}else{figWmult=1}
# Aggregated Class 1
# Aggregate across classes
tblAggsums<-tbl_py%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(sum))
tblAggmeans<-tbl_py%>%
dplyr::filter(aggregate=="mean")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(mean))
tbl_pyC1<-dplyr::bind_rows(tblAggsums,tblAggmeans)%>%dplyr::ungroup()
# Bar Chart
metis.chart(tbl_pyC1, xData ="scenario", yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "bar", facet_columns = xData, facet_rows="region",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""),
fileName = paste(j,"_figBar_compareScenRegion_xScenSelectYears",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_py$x)[unique(tbl_py$x) %in% xCompare])/3),1)*figWMult,
figHeight = 9*max((length(unique(tbl_py$region))/2),1),pdfpng=pdfpng
)
#-------------------------
# Aggregate and Plot Dodged/OverLapping Plots
#------------------------
# Aggregate across classes
tbl_pAggsums<-tbl_p%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-tidyselect::contains("class"),-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-yData,-origValue))%>%
dplyr::summarize_at(c(yData),dplyr::funs(sum))
tbl_pAggmeans<-tbl_p%>%
dplyr::filter(aggregate=="mean")%>%
dplyr::select(-tidyselect::contains("class"),-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-yData,-origValue))%>%
dplyr::summarize_at(c(yData),dplyr::funs(mean))
tbl_pAgg<-dplyr::bind_rows(tbl_pAggsums,tbl_pAggmeans)%>%dplyr::ungroup()
if(nrow(tbl_pAgg)>0){
# Bar Chart Dodged
metis.chart(tbl_pAgg, xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel, sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "bar",
class ="scenario", position ="dodge", classPalette = classPalette,
facet_columns="region",facet_rows="none",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""),
fileName = paste(j,"_figBarDodged_compareScenRegion",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_pAgg$region))/2),1),pdfpng=pdfpng
)
# Line Chart Overlapped
metis.chart(tbl_pAgg,xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "line",class ="scenario", classPalette = classPalette,
facet_columns="region",facet_rows="none",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""),
fileName = paste(j,"_figLineOverlap_compareScenRegion",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_pAgg$region))/2),1),pdfpng=pdfpng
)
}
#-------------------------
# Diff Plots
#------------------------
if(is.null(scenRef)){
print(paste("No reference scenario provided",sep=""))
print(paste("Using ",unique(tbl_p$scenario)[1]," as reference",sep=""))
scenRef_i = unique(tbl_p$scenario)[1]}else{
if(!scenRef %in% unique(tbl_p$scenario)){
print(paste("scenario ",scenRef," not in scenarios",sep=""))
print(paste("Using ",unique(tbl_p$scenario)[1]," as reference",sep=""))
scenRef_i = unique(tbl_p$scenario)[1]}else{
scenRef_i <- scenRef}
} # Check if Ref Scenario Chosen
# Calculate Diff Values
tbl_pd<-tbl_p%>%
dplyr::filter(scenario==scenRef_i)%>%
dplyr::select(-origScen,-origQuery,-origValue,-origUnits,-origX,-sources)
if(!yData %in% names(tbl_p)){tbl_pd<-tbl_pd%>%dplyr::select(-dplyr::one_of(c(yData)))}
for (k in unique(tbl_p$scenario)[unique(tbl_p$scenario)!=scenRef_i]){
tbl_temp <- tbl_p%>%
dplyr::filter(scenario %in% c(scenRef_i,k))%>%
dplyr::select(-origScen,-origQuery,-origValue,-origUnits,-origX,-sources)
if(!yData %in% names(tbl_temp)){tbl_temp<-tbl_temp%>%dplyr::select(-dplyr::one_of(c(yData)))}
tbl_temp <- tbl_temp%>%
tidyr::spread(scenario,yData)%>%
dplyr::mutate(!!paste(k,"_diff",sep=""):=get(k)-get(scenRef_i))%>%
dplyr::select(-dplyr::one_of(c(k,scenRef_i)))
tbl_temp<-tbl_temp%>%
tidyr::gather(key=scenario,value=!!yData,
-c(names(tbl_temp)[!names(tbl_temp) %in% paste(k,"_diff",sep="")]))
tbl_pd<-dplyr::bind_rows(tbl_pd,tbl_temp)
}
tbl_pd <-tbl_pd %>%
dplyr::mutate(scenario=factor(scenario,
levels=c(scenRef_i,
unique(tbl_pd$scenario)[unique(tbl_pd$scenario)!=scenRef_i])))
if(length(unique(tbl_pd$class1))>1){figWMult=1.3}else{figWmult=1}
# Aggregated Class 1
# Aggregate across classes
tblAggsums<-tbl_pd%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(sum))
tblAggmeans<-tbl_pd%>%
dplyr::filter(aggregate=="mean")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(mean))
tbl_pdC1<-dplyr::bind_rows(tblAggsums,tblAggmeans)%>%dplyr::ungroup()
# Bar Chart
metis.chart(tbl_pdC1, xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "bar", facet_rows="region",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""),
fileName = paste(j,"_figBarDiff_compareScenRegion",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_pd$scenario))/2),1)*figWMult,
figHeight = 9*max((length(unique(tbl_pd$region))/2),1),pdfpng=pdfpng
)
# Line Chart
metis.chart(tbl_pdC1, xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "line", facet_rows="region",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""),
fileName = paste(j,"_figLineDiff_compareScenRegion",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_pd$scenario))/2),1)*figWMult,
figHeight = 9*max((length(unique(tbl_pd$region))/2),1),pdfpng=pdfpng
)
} # Close if(nrow(tbl_rsp)>0)
} # Close loop if(length(unique(tbl$scenario))>1) to see if multiple scenarios for chosen param
} # close loop for param
} # Close if multiple scenarios available
} # if length(unique(tbl$region))>1
tbl_p<-tbl%>%dplyr::filter(param==j)
# Aggregated Class 1
# Aggregate across classes
tblAggsums<-tbl_p%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(sum))
tblAggmeans<-tbl_p%>%
dplyr::filter(aggregate=="mean")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(mean))
tbl_pC1<-dplyr::bind_rows(tblAggsums,tblAggmeans)%>%dplyr::ungroup()
# Bar Chart
metis.chart(tbl_pC1, xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "bar",facet_columns="scenario",facet_rows="region",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""),
fileName = paste(j,"_figBar_compareScenRegions",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_p$scenario))/2),1)*figWMult,
figHeight = 9*max((length(unique(tbl_p$region))/2),1),pdfpng=pdfpng
)
# Line Chart
metis.chart(tbl_pC1,xData=xData,yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "line",facet_columns="scenario",facet_rows="region",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""),
fileName = paste(j,"_figLine_compareScenRegions",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_p$scenario))/2),1)*figWMult,
figHeight = 9*max((length(unique(tbl_p$region))/2),1),pdfpng=pdfpng
)
if(any(!xCompare %in% unique(tbl_p[[xData]]))){
print(paste("xCompare not available in data: ", paste(xCompare[!(xCompare %in% unique(tbl_p[[xData]]))],collapse=", "), sep=""))
print(paste("Comparing for only: ",  paste(xCompare[(xCompare %in% unique(tbl_p[[xData]]))],collapse=", "), sep=""))
tbl_py <- tbl_p%>%dplyr::filter(x %in% xCompare)}else{
if(length(unique(tbl_p[[xData]]))<5){
tbl_py <- tbl_p}else{
xCompare<-c(unique(tbl_p[[xData]])[1],
unique(tbl_p[[xData]])[round(length(unique(tbl_p[[xData]]))/2)],
utils::tail(unique(tbl_p[[xData]]),n=1)
)
tbl_py <- tbl_p%>%dplyr::filter(x %in% xCompare)
}
}
# Aggregated Class 1
# Aggregate across classes
tblAggsums<-tbl_py%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(sum))
tblAggmeans<-tbl_py%>%
dplyr::filter(aggregate=="mean")%>%
dplyr::select(-class2,-classLabel2,-classPalette2,-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-value))%>%
dplyr::summarize_at(c("value"),dplyr::funs(mean))
tbl_pyC1<-dplyr::bind_rows(tblAggsums,tblAggmeans)%>%dplyr::ungroup()
# Bar Chart
metis.chart(tbl_pyC1, xData ="scenario", yData=yData,xLabel=xLabel,yLabel=yLabel,
sizeBarLines=sizeBarLines,useNewLabels=useNewLabels,sizeLines=sizeLines, chartType = "bar", facet_columns = xData, facet_rows="region",
dirOutputs = paste(dirOutputs, "/Charts/compareRegions/compareScen", sep = ""),
fileName = paste(j,"_figBar_compareScenRegion_xScenSelectYears",nameAppend,sep=""),
figWidth = 13*max((length(unique(tbl_py$x)[unique(tbl_py$x) %in% xCompare])/3),1)*figWMult,
figHeight = 9*max((length(unique(tbl_py$region))/2),1),pdfpng=pdfpng
)
# Aggregate across classes
tbl_pAggsums<-tbl_p%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-tidyselect::contains("class"),-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-yData,-origValue))%>%
dplyr::summarize_at(c(yData),dplyr::funs(sum))
tbl_p
# Aggregate across classes
tbl_pAggsums<-tbl_p%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-tidyselect::contains("class"),-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-yData,-origValue))%>%
dplyr::summarize_at(c(yData),dplyr::funs(sum))
tbl_p%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-tidyselect::contains("class"),-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-yData,-origValue))
tbl_p%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-tidyselect::contains("class"),-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)
tbl_p%>%
dplyr::filter(aggregate=="sum")%>%
dplyr::select(-tidyselect::contains("class"),-origValue,-origScen,-origQuery,-origUnits,-origX,-vintage)%>%
dplyr::group_by_at(dplyr::vars(-!!yData,-!!origValue))
install.packages(dplyr)
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
